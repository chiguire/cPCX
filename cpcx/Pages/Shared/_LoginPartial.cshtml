@using Microsoft.AspNetCore.Identity
@using cpcx.Entities
@inject SignInManager<CpcxUser> SignInManager
@inject UserManager<CpcxUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li asp-authorize class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
            Hello @User.Identity?.Name!
        </a>
        <ul class="dropdown-menu">
            <li><a class="dropdown-item" asp-area="" asp-page="/User/Index" title="See @User.Identity?.Name! Profile" asp-route-alias="@UserManager.GetUserName(User)">See Profile</a></li>
            <li><a class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage @User.Identity?.Name! Profile">Settings</a></li>
        </ul>
    </li>
    <li class="nav-item">
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
